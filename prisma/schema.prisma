// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkUserId String    @unique
  username    String    @unique
  email       String    @unique
  img         String?
  savedPosts  String[]  @default([]) // Array of post IDs
  posts       Post[] // One-to-many relation with Post
  comments    Comment[] @relation("UserComments") // Reverse relation to Comment
}

model Comment {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], name: "UserComments") // Define the same relation name
  postId String @db.ObjectId
  post   Post   @relation(fields: [postId], references: [id])
  desc   String
}

model Post {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId     String    @db.ObjectId
  user       User      @relation(fields: [userId], references: [id])
  title      String
  slug       String    @unique
  desc       String?
  category   String    @default("general")
  content    String
  isFeatured Boolean   @default(false)
  visit      Int       @default(0)
  comments   Comment[]
}
